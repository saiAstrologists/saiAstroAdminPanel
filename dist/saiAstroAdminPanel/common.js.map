{"version":3,"sources":["./src/app/shared/constants/resturl/resturl.service.ts","./src/app/shared/services/restService/rest.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA2C;;AAKpC,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEV,MAAM,KAAK,KAAK,KAAa,OAAO,QAAQ,CAAC,CAAC,CAAC;IAC/C,MAAM,KAAK,UAAU,KAAa,OAAO,iBAAiB,CAAC,CAAC,CAAC;IAC7D,MAAM,KAAK,SAAS,KAAa,OAAO,YAAY,CAAC,CAAC,CAAC;IACvD,MAAM,KAAK,aAAa,KAAa,OAAO,gBAAgB,CAAC,CAAC,CAAC;IAEtE,aAAa;IACN,MAAM,KAAK,cAAc,KAAY,OAAO,oBAAoB,CAAC,CAAC,CAAC;IACnE,MAAM,KAAK,gBAAgB,KAAY,OAAO,uBAAuB,CAAC,CAAC,CAAC;IACxE,MAAM,KAAK,kBAAkB,KAAY,OAAO,oBAAoB,CAAC,CAAC,CAAC;IACvE,MAAM,KAAK,YAAY,KAAY,OAAO,eAAe,CAAC,CAAC,CAAC;IAC5D,MAAM,KAAK,WAAW,KAAY,OAAO,aAAa,CAAC,CAAC,CAAC;IAEhE,QAAQ;IACD,MAAM,KAAK,WAAW,KAAa,OAAO,SAAS,CAAC,CAAC,CAAC;IACtD,MAAM,KAAK,SAAS,KAAa,OAAO,cAAc,CAAC,CAAC,CAAC;IACzD,MAAM,KAAK,WAAW,KAAa,OAAO,cAAc,CAAC,CAAC,CAAC;IAC3D,MAAM,KAAK,eAAe,KAAa,OAAO,cAAc,CAAC,CAAC,CAAC;IAEtE,OAAO;IACA,MAAM,KAAK,UAAU,KAAa,OAAO,aAAa,CAAC,CAAC,CAAC;IACzD,MAAM,KAAK,QAAQ,KAAa,OAAO,aAAa,CAAC,CAAC,CAAC;IACvD,MAAM,KAAK,UAAU,KAAa,OAAO,yBAAyB,CAAC,CAAC,CAAC;IACrE,MAAM,KAAK,UAAU,KAAa,OAAO,oBAAoB,CAAC,CAAC,CAAC;;4EA1B5D,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEwB;;;AAM5D,MAAM,WAAW;IAEtB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,MAAM,CAAC,MAAM,EAAE,OAAO;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,GAAG,GAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IAED,GAAG,CAAC,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,GAAG,GAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,WAAW,CAAC,MAAM,EAAE,WAAW;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,GAAG,GAAC,MAAM,EAAE,EAAC,MAAM,EAAG,WAAW,EAAC,CAAC;IACtE,CAAC;IAED,MAAM,CAAC,MAAM,EAAE,WAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qEAAW,CAAC,GAAG,GAAC,MAAM,EAAE,EAAC,MAAM,EAAG,WAAW,EAAC,CAAC;IACzE,CAAC;IAED,GAAG,CAAC,MAAM,EAAE,OAAO;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,GAAG,GAAC,MAAM,EAAG,OAAO,CAAC;IACxD,CAAC;;sEAxBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResturlService {\r\n\r\n  constructor() { }\r\n  \r\n  public static get login(): string { return '/login'; }\r\n  public static get forgotPswd(): string { return '/forgotPassword'; }\r\n  public static get verifyotp(): string { return '/verifyotp'; }\r\n  public static get resetPassword(): string { return '/resetPassword'; }\r\n\r\n  // astrologer\r\n  public static get astrologerList(): string {return '/listOfAstrologers'; }\r\n  public static get astrologerDetail(): string {return '/getastrologerdetails'; }\r\n  public static get appectRejectAppltn(): string {return '/acceptApplication'; }\r\n  public static get updatePrices(): string {return '/updatePrices'; } \r\n  public static get reportsList(): string {return '/getreports'; } \r\n\r\n  // admin\r\n  public static get createAdmin(): string { return '/create'; }\r\n  public static get adminList(): string { return '/listofadmin'; }\r\n  public static get updateAdmin(): string { return '/updateadmin'; }\r\n  public static get deleteAdminData(): string { return '/deleteAdmin'; }\r\n\r\n  // blog\r\n  public static get createBlog(): string { return '/users/blog'; }\r\n  public static get blogList(): string { return '/users/blog'; }\r\n  public static get deleteBlog(): string { return '/users/delete/blog/post'; }\r\n  public static get updateBlog(): string { return '/users/update/blog'; }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  create(reqUrl, reqData): Observable<any>{\r\n    return this.http.post(environment.url+reqUrl, reqData);\r\n  }\r\n\r\n  get(reqUrl): Observable<any>{\r\n    return this.http.get(environment.url+reqUrl);\r\n  }\r\n  \r\n  getByParams(reqUrl, headerParam): Observable<any>{\r\n    return this.http.get(environment.url+reqUrl ,{params : headerParam})\r\n  }\r\n\r\n  delete(reqUrl, headerParam): Observable<any>{\r\n    return this.http.delete(environment.url+reqUrl ,{params : headerParam})\r\n  }\r\n\r\n  put(reqUrl, reqData): Observable<any>{\r\n    return this.http.put(environment.url+reqUrl , reqData)\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}